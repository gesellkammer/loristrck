name: Build 

on: [push, pull_request]

jobs:
  # Make Windows build
  Windows_build_wheels:
    name: Build python wheels on ${{ matrix.os }}
    runs-on: Windows-latest
    strategy:
      matrix:
        os: [windows-latest]
        python-version: ["3.9", "3.10"]

    steps:
      - uses: actions/checkout@v2

      # install Visual Studio 2022 Community
      - name: Install Visual Studio 2022
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}


      - name: Prepare Build Loris
        run: |
          Write-Output "Current Location is $($PWD.Path)"
          cd "C:\Program Files\Microsoft Visual Studio\2022\Enterprise"
          powershell  -NoExit -Command "Import-Module ./Common7/Tools/Microsoft.VisualStudio.DevShell.dll; Enter-VsDevShell d718e166 -SkipAutomaticLocation"
          cd ${{github.workspace}}
          python scripts/prepare_windows_build.py

      - name: Build wheels
        run: |
          python -m pip install wheel
          python setup.py bdist_wheel

      - uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist/*.whl

      - name: Upload wheels
        env:
          TWINE_USERNAME: Eduardo.Moguillansky
          TWINE_PASSWORD: ${{ secrets.pypipass }}
        run: |
          echo $TWINE_USERNAME
          echo $TWINE_PASSWORD
          python -m pip install -U twine virtualenv
          twine upload --skip-existing dist/*.whl
        continue-on-error: true

      #- name: Build wheels
      #  run: |
      #    python -m pip install wheel
      #    python setup.py bdist_wheel
      #- name: Upload wheels
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: wheels
      #    path: dist/*.whl

  build_wheels:
    name: Build python wheels on ${{ matrix.os }} 
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [macOS-10.15, windows-latest, ubuntu-latest]
        os: [ubuntu-latest]

    steps:

      - uses: actions/checkout@v3

      # Used to host cibuildwheel
      - name: Setup python
        uses: actions/setup-python@v4

      # install Visual Studio 2022 Community
      - name: Install Visual Studio 2022
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64
        
      - name: Install dependencies macos
        if: runner.os == 'macos'
        run: |
            brew update
            brew install fftw

      - name: Install fftw for Linux
        # if: matrix.os == 'ubuntu-latest'
        if: runner.os == 'linux'
        run: |
            sudo apt -y install libfftw3-dev

      - name: Windows - Enable Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@v1.7.0

      - name: Build Loris
        if: runner.os == 'windows'
        run: |
          Write-Output "Current Location is $($PWD.Path)"
          cd "C:\Program Files\Microsoft Visual Studio\2022\Enterprise"
          powershell  -NoExit -Command "Import-Module ./Common7/Tools/Microsoft.VisualStudio.DevShell.dll; Enter-VsDevShell d718e166 -SkipAutomaticLocation"
          cd ${{github.workspace}}
          python scripts/prepare_windows_build.py

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.0
        env:
            CIBW_BUILD: 'cp39-* cp310-* cp311-*'
            CIBW_ARCHS_MACOS: 'x86_64'
            CIBW_SKIP: 'pp* *686* *-musllinux_*'
            CIBW_BEFORE_ALL_LINUX: yum install -y fftw-devel

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

      - name: Upload wheels
        env:
          TWINE_USERNAME: Eduardo.Moguillansky
          TWINE_PASSWORD: ${{ secrets.pypipass }}
        run: |
            echo $TWINE_USERNAME
            echo $TWINE_PASSWORD
            python -m pip install -U twine virtualenv
            twine upload --skip-existing wheelhouse/*.whl
        continue-on-error: true
