name: Build 

on: [push, pull_request]

jobs:
  # Make Windows build
  Windows_build_wheels:
    name: Build python wheels on ${{ matrix.os }}
    runs-on: Windows-latest
    strategy:
      matrix:
        os: [windows-latest]
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v3

      # install Visual Studio 2022 Community
      - name: Install Visual Studio 2022
        uses: ilammy/msvc-dev-cmd@v1
        
        with:
          arch: x64

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}


      - name: Prepare Build Loris
        run: |
          Write-Output "Current Location is $($PWD.Path)"
          cd "C:\Program Files\Microsoft Visual Studio\2022\Enterprise"
          powershell  -NoExit -Command "Import-Module ./Common7/Tools/Microsoft.VisualStudio.DevShell.dll; Enter-VsDevShell d718e166 -SkipAutomaticLocation"
          cd ${{github.workspace}}
          python scripts/prepare_windows_build.py
          tree tmp/fftw3 /F

      - name: Build wheels
        run: |
          python -m pip install wheel numpy setuptools cython twine virtualenv packaging pkginfo
          python setup.py bdist_wheel

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ matrix.python-version }}-${{ strategy.job-index }}
          path: dist/*.whl

      - name: Upload wheels
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TWINETOKEN }}
        run: |
          twine upload --skip-existing dist/*.whl
        continue-on-error: true

  build_wheels:
    name: Build python wheels on ${{ matrix.os }} 
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:

      - uses: actions/checkout@v3

      # Used to host cibuildwheel
      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      #- name: Install dependencies macos
      #  if: runner.os == 'macos'
      #  run: |
      #      brew update
      #      brew install fftw

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel twine virtualenv packaging pkginfo

      - name: Build wheels 
        env:
          MACOSX_DEPLOYMENT_TARGET: 14.0
          # Fix delocation error for fftw3
          CIBW_BUILD: 'cp39-* cp310-* cp311-* cp312-* cp313-*'
          # We don't build for arm because the fftw lib is still not included
          # See the cirrus build 
          CIBW_ARCHS_MACOS: 'x86_64 arm64'
          CIBW_SKIP: 'pp* *686* *-musllinux_*'
          CIBW_BUILD_VERBOSITY: 2
          CIBW_BEFORE_ALL_LINUX: yum install -y fftw-devel
          CIBW_BEFORE_ALL_MACOS: brew update; brew install fftw
          CIBW_REPAIR_WHEEL_COMMAND_MACOS: delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel}
        run: |
          python -m cibuildwheel --output-dir wheelhouse    

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

      - name: Upload wheels
        env:
          TWINE_USERNAME: __token__
          # twine24.4
          TWINE_PASSWORD: ${{ secrets.TWINETOKEN }}
        run: |
            echo $TWINE_USERNAME
            echo $TWINE_PASSWORD
            # python -m pip install -U twine virtualenv
            twine upload --skip-existing wheelhouse/*.whl
        continue-on-error: true
